services:
  backend:
    build:
      context: ./backend
      target: dev
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
      - backend_static:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: ./frontend
      target: dev
    env_file: ./frontend/.env
    volumes:
      - ./frontend:/app
    ports:
      - "5000:5000"
    depends_on:
      - backend

  postgres:
  # postgres uses postgres:17 - as of 2025, this is a non-existent image. The latest LTS is postgres:16.
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 234567
      POSTGRES_DB: mydb 
    ports:
      - "5432:5432"
    env_file: ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
# celery-1, который упал из-за ошибки:
# celery-1    | exec ./entrypoint.sh: no such file or directory
# celery-1    | [2023-10-02 12:00:00,000: ERROR/MainProcess] Unrecoverable error: FileNotFoundError(2, 'No such file or directory')
# Problem:
# You are using the -B parameter, which runs Celery Beat in the same process as Celery Worker. This is not recommended in production. It is better to run Celery Beat separately:

  celery:
    build: ./backend
    command: celery -A config worker -l info
    env_file: ./backend/.env
    depends_on:
      - redis

  celery-beat:
    build: ./backend
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file: ./backend/.env
    depends_on:
      - redis
      - celery


volumes:
  postgres_data:
  redis_data:
  backend_static:
